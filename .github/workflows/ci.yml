name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        python-version: ["3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.0

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint TypeScript
        run: pnpm lint

      - name: Typecheck TypeScript
        run: pnpm typecheck

      - name: Build packages
        run: pnpm build

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install Python dependencies (API)
        run: |
          cd apps/api
          pip install -r requirements.txt

      - name: Lint Python (API)
        run: |
          cd apps/api
          ruff check app/ || true

      - name: Typecheck Python (API)
        continue-on-error: true
        run: |
          cd apps/api
          mypy app/ --ignore-missing-imports || true

      - name: Install Python dependencies (AI)
        run: |
          cd apps/ai
          pip install -r requirements.txt

      - name: Lint Python (AI)
        run: |
          cd apps/ai
          ruff check app/ || true

      - name: Typecheck Python (AI)
        continue-on-error: true
        run: |
          cd apps/ai
          mypy app/ --ignore-missing-imports || true

  docker-build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test docker-compose config
        run: |
          cd infra
          docker compose config
